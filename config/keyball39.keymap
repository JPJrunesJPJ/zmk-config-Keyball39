/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer definitions
#define BASE        0
#define NAV         1
#define NUM         2
#define SYM         3
#define FUN         4
#define WIN         5  // New Windows Management layer
#define BASE_OSM    6
#define NAV_OSM     7
#define NUM_OSM     8
#define SYM_OSM     9
#define FUN_OSM     10
#define WIN_OSM     11 // OSM Windows Management layer
#define ADJ         12
#define BASE_MIR    13
#define NAV_MIR     14
#define NUM_MIR     15
#define SYM_MIR     16
#define FUN_MIR     17
#define WIN_MIR     18
#define BASE_OSM_MIR 19
#define NAV_OSM_MIR  20
#define NUM_OSM_MIR  21
#define SYM_OSM_MIR  22
#define FUN_OSM_MIR  23
#define WIN_OSM_MIR  24

// Enhanced behavior configurations
&lt {
    tapping-term-ms = <280>;    // Longer for thumbs
    flavor = "balanced";
    quick-tap-ms = <175>;
    global-quick-tap;           // Enable quick-tap on all layers
};

&mt {
    tapping-term-ms = <280>;    // Miryoku-style timing
    flavor = "balanced";
    quick-tap-ms = <175>;
    global-quick-tap;
    retro-tap;                  // Tap on release if no other key pressed
};

&sk {
    release-after-ms = <2000>;  // Callum-style OSM timeout
    quick-release;              // Release on next non-modifier
};

&caps_word { 
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
    shift-continuation = <UNDERSCORE>;
};

/ {
    combos {
        compatible = "zmk,combos";
        
        // Universal escape (works in both modes)
        combo_esc {
            timeout-ms = <40>;
            key-positions = <16 17>;
            bindings = <&kp ESC>;
            layers = <BASE NAV NUM SYM FUN BASE_OSM NAV_OSM NUM_OSM SYM_OSM FUN_OSM>;
        };

        // Quick tab access
        combo_tab {
            timeout-ms = <40>;
            key-positions = <0 1>;
            bindings = <&kp TAB>;
            layers = <BASE NAV NUM SYM FUN BASE_OSM NAV_OSM NUM_OSM SYM_OSM FUN_OSM>;
        };

        // Quick delete
        combo_del {
            timeout-ms = <40>;
            key-positions = <7 8>;
            bindings = <&kp DEL>;
            layers = <BASE NAV NUM SYM FUN BASE_OSM NAV_OSM NUM_OSM SYM_OSM FUN_OSM>;
        };

        // Enhanced caps word (both modes)
        combo_caps {
            timeout-ms = <50>;
            key-positions = <13 16>;  // F + J
            bindings = <&caps_word>;
            layers = <BASE BASE_OSM>;
        };

        // Smart quotes combo
        combo_dqt {
            timeout-ms = <30>;
            key-positions = <17 18>;  // K + L
            bindings = <&kp DQT>;
            layers = <BASE BASE_OSM>;
        };

        // Programming brackets - faster than tap-dance
        combo_lbkt {
            timeout-ms = <30>;
            key-positions = <1 2>;    // W + E
            bindings = <&kp LBKT>;
            layers = <BASE BASE_OSM>;
        };

        combo_rbkt {
            timeout-ms = <30>;
            key-positions = <2 3>;    // E + R
            bindings = <&kp RBKT>;
            layers = <BASE BASE_OSM>;
        };

        combo_lbrc {
            timeout-ms = <30>;
            key-positions = <11 12>;  // S + D
            bindings = <&kp LBRC>;
            layers = <BASE BASE_OSM>;
        };

        combo_rbrc {
            timeout-ms = <30>;
            key-positions = <12 13>;  // D + F
            bindings = <&kp RBRC>;
            layers = <BASE BASE_OSM>;
        };

        // Quick parentheses
        combo_lpar {
            timeout-ms = <30>;
            key-positions = <16 17>;  // J + K
            bindings = <&kp LPAR>;
            layers = <SYM SYM_OSM>;
        };

        combo_rpar {
            timeout-ms = <30>;
            key-positions = <17 18>;  // K + L
            bindings = <&kp RPAR>;
            layers = <SYM SYM_OSM>;
        };

        // Enhanced window management shortcuts
        combo_win_left {
            timeout-ms = <50>;
            key-positions = <21 22>;  // X + C
            bindings = <&kp LG(LEFT)>;
            layers = <NAV NAV_OSM>;
        };

        combo_win_right {
            timeout-ms = <50>;
            key-positions = <22 23>;  // C + V
            bindings = <&kp LG(RIGHT)>;
            layers = <NAV NAV_OSM>;
        };

        // Virtual desktop shortcuts
        combo_desktop_left {
            timeout-ms = <50>;
            key-positions = <11 12>;  // S + D
            bindings = <&kp LC(LG(LEFT))>;
            layers = <WIN WIN_OSM>;
        };

        combo_desktop_right {
            timeout-ms = <50>;
            key-positions = <12 13>;  // D + F
            bindings = <&kp LC(LG(RIGHT))>;
            layers = <WIN WIN_OSM>;
        };

        // Show desktop
        combo_show_desktop {
            timeout-ms = <50>;
            key-positions = <13 14>;  // F + G
            bindings = <&kp LG(D)>;
            layers = <WIN WIN_OSM>;
        };

        // New desktop
        combo_new_desktop {
            timeout-ms = <50>;
            key-positions = <14 15>;  // G + H
            bindings = <&kp LC(LG(D))>;
            layers = <WIN WIN_OSM>;
        };

        // Close desktop
        combo_close_desktop {
            timeout-ms = <50>;
            key-positions = <15 16>;  // H + J
            bindings = <&kp LC(LG(F4))>;
            layers = <WIN WIN_OSM>;
        };

        // Task switching combos (universal - work in multiple layers)
        combo_alt_tab {
            timeout-ms = <40>;
            key-positions = <1 11>;   // W + S (diagonal)
            bindings = <&alt_tab>;
            layers = <BASE NAV WIN BASE_OSM NAV_OSM WIN_OSM>;
        };

        combo_alt_shift_tab {
            timeout-ms = <40>;
            key-positions = <1 21>;   // W + X (diagonal)
            bindings = <&alt_shift_tab>;
            layers = <BASE NAV WIN BASE_OSM NAV_OSM WIN_OSM>;
        };

        combo_ctrl_alt_tab {
            timeout-ms = <40>;
            key-positions = <2 12>;   // E + D (diagonal)
            bindings = <&ctrl_alt_tab>;
            layers = <BASE NAV WIN BASE_OSM NAV_OSM WIN_OSM>;
        };

        combo_ctrl_alt_shift_tab {
            timeout-ms = <40>;
            key-positions = <2 22>;   // E + C (diagonal)
            bindings = <&ctrl_alt_shift_tab>;
            layers = <BASE NAV WIN BASE_OSM NAV_OSM WIN_OSM>;
        };

        // Task view
        combo_task_view {
            timeout-ms = <50>;
            key-positions = <16 17>;  // J + K
            bindings = <&kp LG(TAB)>;
            layers = <WIN WIN_OSM>;
        };

        // Snap assist
        combo_snap_assist {
            timeout-ms = <50>;
            key-positions = <17 18>;  // K + L
            bindings = <&kp LG(Z)>;
            layers = <WIN WIN_OSM>;
        };

        // Adjustment layer access
        combo_adj {
            timeout-ms = <50>;
            key-positions = <33 35>;
            bindings = <&mo ADJ>;
        };

        // Windows management layer access (both modes)
        combo_win_layer {
            timeout-ms = <50>;
            key-positions = <30 31>;  // Bottom left corner
            bindings = <&sl WIN>;
            layers = <BASE NAV NUM SYM FUN>;
        };

        combo_win_layer_osm {
            timeout-ms = <50>;
            key-positions = <30 31>;  // Bottom left corner
            bindings = <&sl WIN_OSM>;
            layers = <BASE_OSM NAV_OSM NUM_OSM SYM_OSM FUN_OSM>;
        };

        // Mirror layer access - context aware
        combo_mirror_hrm {
            timeout-ms = <100>;
            key-positions = <31 32>;
            bindings = <&sl BASE_MIR>;
            layers = <BASE NAV NUM SYM FUN WIN>;
        };

        combo_mirror_osm {
            timeout-ms = <100>;
            key-positions = <31 32>;
            bindings = <&sl BASE_OSM_MIR>;
            layers = <BASE_OSM NAV_OSM NUM_OSM SYM_OSM FUN_OSM WIN_OSM>;
        };

        // Emergency base layer return
        combo_base_return {
            timeout-ms = <100>;
            key-positions = <0 9>;    // Q + P
            bindings = <&to BASE>;
        };
    };

    macros {
        // Arrow function macro (for programming)
        arrow_fn: arrow_fn {
            compatible = "zmk,behavior-macro";
            label = "ARROW_FN";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT &kp SPACE>;
        };

        // Common programming constructs
        console_log: console_log {
            compatible = "zmk,behavior-macro";
            label = "CONSOLE_LOG";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp N &kp S &kp O &kp L &kp E &kp DOT &kp L &kp O &kp G &kp LPAR>;
        };

        // Windows power user shortcuts
        win_run: win_run {
            compatible = "zmk,behavior-macro";
            label = "WIN_RUN";
            #binding-cells = <0>;
            bindings = <&kp LG(R)>;
        };

        win_settings: win_settings {
            compatible = "zmk,behavior-macro";
            label = "WIN_SETTINGS";
            #binding-cells = <0>;
            bindings = <&kp LG(I)>;
        };

        win_lock: win_lock {
            compatible = "zmk,behavior-macro";
            label = "WIN_LOCK";
            #binding-cells = <0>;
            bindings = <&kp LG(L)>;
        };

        // Enhanced Alt+Tab family
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            label = "ALT_TAB";
            #binding-cells = <0>;
            bindings = <&kp LA(TAB)>;
        };

        alt_shift_tab: alt_shift_tab {
            compatible = "zmk,behavior-macro";
            label = "ALT_SHIFT_TAB";
            #binding-cells = <0>;
            bindings = <&kp LA(LS(TAB))>;
        };

        ctrl_alt_tab: ctrl_alt_tab {
            compatible = "zmk,behavior-macro";
            label = "CTRL_ALT_TAB";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(TAB))>;
        };

        ctrl_alt_shift_tab: ctrl_alt_shift_tab {
            compatible = "zmk,behavior-macro";
            label = "CTRL_ALT_SHIFT_TAB";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LS(TAB)))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Enhanced base layer with optimized home row mods
        base_layer {
            label = "BASE";
            bindings = <
&kp Q           &kp W           &kp E            &kp R             &kp T              &kp Y         &kp U             &kp I            &kp O           &kp P
&mt LGUI A      &mt LALT S      &mt LCTRL D      &mt LSHFT F       &kp G              &kp H         &mt RSHFT J       &mt RCTRL K      &mt RALT L      &mt RGUI SEMI
&kp Z           &kp X           &kp C            &kp V             &kp B              &kp N         &kp M             &kp COMMA        &kp DOT         &kp FSLH
&kp LCTRL       &kp LGUI        &kp LALT         &lt NUM ESC       &lt NAV SPACE      &none         &kp RET           &lt SYM BSPC                     &sl FUN
            >;
        };

        // Enhanced navigation with window management
        nav_layer {
            label = "NAV";
            bindings = <
&kp ESC         &kp TAB         &kp LC(T)        &kp LC(W)         &kp LC(R)          &kp PG_UP     &kp HOME          &kp UP           &kp END         &kp DEL
&sk LGUI        &sk LALT        &sk LCTRL        &sk LSHFT         &kp LC(G)          &kp PG_DN     &kp LEFT          &kp DOWN         &kp RIGHT       &kp SQT
&kp LC(Z)       &kp LC(X)       &kp LC(C)        &kp LC(V)         &kp LC(F)          &kp INS       &mkp LCLK         &mkp MCLK        &mkp RCLK       &kp BSLH
&trans          &trans          &trans           &trans            &trans             &trans        &sl WIN           &trans                           &trans
            >;
        };

        // Enhanced number layer with F-keys
        num_layer {
            label = "NUM";
            bindings = <
&kp LBKT        &kp N7          &kp N8           &kp N9            &kp RBKT           &kp F12       &kp F7            &kp F8           &kp F9          &kp PSCRN
&kp SQT         &kp N4          &kp N5           &kp N6            &kp EQUAL          &kp F11       &kp F4            &kp F5           &kp F6          &kp SCRLK
&kp GRAVE       &kp N1          &kp N2           &kp N3            &kp BSLH           &kp F10       &kp F1            &kp F2           &kp F3          &kp PAUSE_BREAK
&trans          &trans          &trans           &trans            &kp N0             &trans        &trans            &kp MINUS                        &kp DOT
            >;
        };

        // Enhanced symbol layer with programming focus
        sym_layer {
            label = "SYM";
            bindings = <
&kp LBRC        &kp AMPS        &kp ASTRK        &kp LPAR          &kp RBRC           &arrow_fn     &kp UNDER         &kp PLUS         &kp PIPE        &kp TILDE
&kp DQT         &kp DLLR        &kp PRCNT        &kp CARET         &kp PLUS           &trans        &sk RSHFT         &sk RCTRL        &sk RALT        &sk RGUI
&kp TILDE       &kp EXCL        &kp AT           &kp HASH          &kp PIPE           &console_log  &kp MINUS         &kp EQUAL        &kp COLON       &kp QMARK
&trans          &trans          &trans           &kp LPAR          &kp UNDER          &trans        &trans            &trans                           &trans
            >;
        };

        // Enhanced function layer
        fun_layer {
            label = "FUN";
            bindings = <
&kp F12         &kp F7          &kp F8           &kp F9            &kp PSCRN          &kp C_BRI_UP  &kp C_VOL_UP      &kp C_NEXT       &trans          &trans
&kp F11         &kp F4          &kp F5           &kp F6            &kp SCRLK          &kp C_BRI_DN  &kp C_VOL_DN      &kp C_PREV       &kp C_PP        &trans
&kp F10         &kp F1          &kp F2           &kp F3            &kp PAUSE_BREAK    &trans        &kp C_MUTE        &trans           &trans          &trans
&trans          &trans          &trans           &kp SPACE         &kp TAB            &trans        &trans            &kp DEL                          &trans
            >;
        };

        // Windows Management layer - HRM version
        win_layer {
            label = "WIN";
            bindings = <
&kp LG(TAB)     &alt_tab         &ctrl_alt_tab    &kp LC(LG(RIGHT)) &kp LC(LG(D))      &alt_shift_tab &kp LG(N7)        &kp LG(N8)       &kp LG(N9)      &win_lock
&kp LG(LEFT)    &kp LG(DOWN)     &kp LG(UP)       &kp LG(RIGHT)     &kp LG(D)          &ctrl_alt_shift_tab &kp LG(N4)   &kp LG(N5)       &kp LG(N6)      &win_settings
&win_run        &kp LG(X)        &kp LG(C)        &kp LG(V)         &kp LC(LG(F4))     &kp LG(M)     &kp LG(N1)        &kp LG(N2)       &kp LG(N3)      &kp LG(SEMI)
&trans          &trans           &trans           &kp LC(LG(LEFT))  &trans             &trans        &kp LG(N0)        &trans                           &trans
            >;
        };

        // Enhanced OSM base layer
        base_osm_layer {
            label = "OSM-BASE";
            bindings = <
&kp Q           &kp W           &kp E            &kp R             &kp T              &kp Y         &kp U             &kp I            &kp O           &kp P
&kp A           &kp S           &kp D            &kp F             &kp G              &kp H         &kp J             &kp K            &kp L           &kp SEMI
&kp Z           &kp X           &kp C            &kp V             &kp B              &kp N         &kp M             &kp COMMA        &kp DOT         &kp FSLH
&kp LCTRL       &kp LGUI        &kp LALT         &lt NUM_OSM ESC   &lt NAV_OSM SPACE  &none         &kp RET           &lt SYM_OSM BSPC                 &sk LSHFT
            >;
        };

        // OSM Navigation with sticky modifiers
        nav_osm_layer {
            label = "OSM-NAV";
            bindings = <
&kp ESC         &kp TAB         &kp LC(T)        &kp LC(W)         &kp LC(R)          &kp PG_UP     &kp HOME          &kp UP           &kp END         &kp DEL
&sk LGUI        &sk LALT        &sk LCTRL        &sk LSHFT         &kp LC(G)          &kp PG_DN     &kp LEFT          &kp DOWN         &kp RIGHT       &kp SQT
&kp LC(Z)       &kp LC(X)       &kp LC(C)        &kp LC(V)         &kp LC(F)          &kp INS       &mkp LCLK         &mkp MCLK        &mkp RCLK       &kp BSLH
&trans          &trans          &trans           &trans            &trans             &trans        &sl WIN_OSM       &trans                           &trans
            >;
        };

        // OSM Number layer
        num_osm_layer {
            label = "OSM-NUM";
            bindings = <
&kp LBKT        &kp N7          &kp N8           &kp N9            &kp RBKT           &kp F12       &kp F7            &kp F8           &kp F9          &kp PSCRN
&kp SQT         &kp N4          &kp N5           &kp N6            &kp EQUAL          &kp F11       &kp F4            &kp F5           &kp F6          &kp SCRLK
&kp GRAVE       &kp N1          &kp N2           &kp N3            &kp BSLH           &kp F10       &kp F1            &kp F2           &kp F3          &kp PAUSE_BREAK
&trans          &trans          &trans           &trans            &kp N0             &trans        &trans            &kp MINUS                        &kp DOT
            >;
        };

        // OSM Symbol layer with enhanced programming support
        sym_osm_layer {
            label = "OSM-SYM";
            bindings = <
&kp LBRC        &kp AMPS        &kp ASTRK        &kp LPAR          &kp RBRC           &arrow_fn     &kp UNDER         &kp PLUS         &kp PIPE        &kp TILDE
&kp DQT         &kp DLLR        &kp PRCNT        &kp CARET         &kp PLUS           &trans        &sk LSHFT         &sk LCTRL        &sk LALT        &sk LGUI
&kp TILDE       &kp EXCL        &kp AT           &kp HASH          &kp PIPE           &console_log  &kp MINUS         &kp EQUAL        &kp COLON       &kp QMARK
&trans          &trans          &trans           &kp LPAR          &kp UNDER          &trans        &trans            &trans                           &trans
            >;
        };

        // OSM Function layer with media controls
        fun_osm_layer {
            label = "OSM-FUN";
            bindings = <
&kp F12         &kp F7          &kp F8           &kp F9            &kp PSCRN          &kp C_BRI_UP  &kp C_VOL_UP      &kp C_NEXT       &trans          &trans
&kp F11         &kp F4          &kp F5           &kp F6            &kp SCRLK          &kp C_BRI_DN  &kp C_VOL_DN      &kp C_PREV       &kp C_PP        &trans
&kp F10         &kp F1          &kp F2           &kp F3            &kp PAUSE_BREAK    &trans        &kp C_MUTE        &trans           &trans          &trans
&trans          &trans          &trans           &kp SPACE         &kp TAB            &trans        &trans            &kp DEL                          &trans
            >;
        };

        // Windows Management layer - OSM version
        win_osm_layer {
            label = "WIN-OSM";
            bindings = <
&kp LG(TAB)     &kp LC(LG(LEFT)) &kp LG(UP)      &kp LC(LG(RIGHT)) &kp LC(LG(D))      &alt_tab      &kp LG(N7)        &kp LG(N8)       &kp LG(N9)      &win_lock
&kp LG(LEFT)    &kp LG(DOWN)     &kp LG(UP)      &kp LG(RIGHT)     &kp LG(D)          &kp LG(Z)     &kp LG(N4)        &kp LG(N5)       &kp LG(N6)      &win_settings
&win_run        &kp LG(X)        &kp LG(C)       &kp LG(V)         &kp LC(LG(F4))     &kp LG(M)     &kp LG(N1)        &kp LG(N2)       &kp LG(N3)      &kp LG(SEMI)
&trans          &trans           &trans          &trans            &trans             &trans        &kp LG(N0)        &trans                           &trans
            >;
        };

        // Enhanced adjustment layer
        adj_layer {
            label = "ADJ";
            bindings = <
&bootloader     &trans          &trans           &trans            &to BASE           &to BASE_OSM  &trans            &trans           &trans          &bootloader
&bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2      &bt BT_SEL 3       &kp C_BRI_DN  &kp C_BRI_UP      &kp C_VOL_DN     &kp C_VOL_UP    &kp C_MUTE
&sys_reset      &trans          &trans           &trans            &trans             &trans        &trans            &trans           &trans          &sys_reset
&trans          &trans          &trans           &trans            &trans             &trans        &trans            &trans                           &trans
            >;
        };

        // ═══════════════════════════════════════════════════════════════════════════
        // ENHANCED MIRROR LAYERS - HOME ROW MODS
        // ═══════════════════════════════════════════════════════════════════════════

        base_mir_layer {
            label = "BASE-MIR";
            bindings = <
&kp P           &kp O           &kp I            &kp U             &kp Y              &kp T         &kp R             &kp E            &kp W           &kp Q
&mt RGUI SEMI   &mt RALT L      &mt RCTRL K      &mt RSHFT J       &kp H              &kp G         &mt LSHFT F       &mt LCTRL D      &mt LALT S      &mt LGUI A
&kp FSLH        &kp DOT         &kp COMMA        &kp M             &kp N              &kp B         &kp V             &kp C            &kp X           &kp Z
&sl FUN_MIR     &lt SYM_MIR BSPC &kp RET        &none             &lt NAV_MIR SPACE  &lt NUM_MIR ESC &kp LALT        &kp LGUI                         &kp LCTRL
            >;
        };

        nav_mir_layer {
            label = "NAV-MIR";
            bindings = <
&kp DEL         &kp END         &kp UP           &kp HOME          &kp PG_UP          &kp LC(R)     &kp LC(W)         &kp LC(T)        &kp TAB         &kp ESC
&kp SQT         &kp RIGHT       &kp DOWN         &kp LEFT          &kp PG_DN          &kp LC(G)     &sk LSHFT         &sk LCTRL        &sk LALT        &sk LGUI
&kp BSLH        &mkp RCLK       &mkp MCLK        &mkp LCLK         &kp INS            &kp LC(F)     &kp LC(V)         &kp LC(C)        &kp LC(X)       &kp LC(Z)
&trans          &trans          &sl FUN_MIR      &trans            &trans             &trans        &trans            &trans                           &trans
            >;
        };

        num_mir_layer {
            label = "NUM-MIR";
            bindings = <
&kp PSCRN       &kp F9          &kp F8           &kp F7            &kp F12            &kp RBKT      &kp N9            &kp N8           &kp N7          &kp LBKT
&kp SCRLK       &kp F6          &kp F5           &kp F4            &kp F11            &kp EQUAL     &kp N6            &kp N5           &kp N4          &kp SQT
&kp PAUSE_BREAK &kp F3          &kp F2           &kp F1            &kp F10            &kp BSLH      &kp N3            &kp N2           &kp N1          &kp GRAVE
&kp DOT         &kp MINUS       &trans           &trans            &kp N0             &trans        &trans            &trans                           &trans
            >;
        };

        sym_mir_layer {
            label = "SYM-MIR";
            bindings = <
&kp TILDE       &kp PIPE        &kp PLUS         &kp UNDER         &arrow_fn          &kp RBRC      &kp LPAR          &kp ASTRK        &kp AMPS        &kp LBRC
&sk RGUI        &sk RALT        &sk RCTRL        &sk RSHFT         &trans             &kp PLUS      &kp CARET         &kp PRCNT        &kp DLLR        &kp DQT
&kp QMARK       &kp COLON       &kp EQUAL        &kp MINUS         &console_log       &kp PIPE      &kp HASH          &kp AT           &kp EXCL        &kp TILDE
&trans          &trans          &trans           &trans            &kp UNDER          &kp LPAR      &trans            &trans                           &trans
            >;
        };

        // Enhanced mirror layers with Windows support
        win_mir_layer {
            label = "WIN-MIR";
            bindings = <
&win_lock       &kp LG(N9)      &kp LG(N8)       &kp LG(N7)        &alt_tab           &kp LC(LG(D)) &kp LC(LG(RIGHT)) &kp LG(UP)      &kp LC(LG(LEFT)) &kp LG(TAB)
&win_settings   &kp LG(N6)      &kp LG(N5)       &kp LG(N4)        &kp LG(Z)          &kp LG(D)     &kp LG(RIGHT)     &kp LG(UP)      &kp LG(DOWN)    &kp LG(LEFT)
&kp LG(SEMI)    &kp LG(N3)      &kp LG(N2)       &kp LG(N1)        &kp LG(M)          &kp LC(LG(F4)) &kp LG(V)        &kp LG(C)       &kp LG(X)       &win_run
&trans          &trans          &kp LG(N0)       &trans            &trans             &trans        &trans            &trans                           &trans
            >;
        };

        // ═══════════════════════════════════════════════════════════════════════════
        // ENHANCED MIRROR LAYERS - ONE SHOT MODS
        // ═══════════════════════════════════════════════════════════════════════════

        base_osm_mir_layer {
            label = "OSM-MIR";
            bindings = <
&kp P           &kp O           &kp I            &kp U             &kp Y              &kp T         &kp R             &kp E            &kp W           &kp Q
&kp SEMI        &kp L           &kp K            &kp J             &kp H              &kp G         &kp F             &kp D            &kp S           &kp A
&kp FSLH        &kp DOT         &kp COMMA        &kp M             &kp N              &kp B         &kp V             &kp C            &kp X           &kp Z
&sk LSHFT       &lt SYM_OSM_MIR BSPC &kp RET     &none             &lt NAV_OSM_MIR SPACE &lt NUM_OSM_MIR ESC &kp LALT &kp LGUI                       &kp LCTRL
            >;
        };

        nav_osm_mir_layer {
            label = "OSM-NAV-MIR";
            bindings = <
&kp DEL         &kp END         &kp UP           &kp HOME          &kp PG_UP          &kp LC(R)     &kp LC(W)         &kp LC(T)        &kp TAB         &kp ESC
&kp SQT         &kp RIGHT       &kp DOWN         &kp LEFT          &kp PG_DN          &kp LC(G)     &sk LSHFT         &sk LCTRL        &sk LALT        &sk LGUI
&kp BSLH        &mkp RCLK       &mkp MCLK        &mkp LCLK         &kp INS            &kp LC(F)     &kp LC(V)         &kp LC(C)        &kp LC(X)       &kp LC(Z)
&trans          &trans          &sl FUN_OSM_MIR  &trans            &trans             &trans        &trans            &trans                           &trans
            >;
        };

        num_osm_mir_layer {
            label = "OSM-NUM-MIR";
            bindings = <
&kp PSCRN       &kp F9          &kp F8           &kp F7            &kp F12            &kp RBKT      &kp N9            &kp N8           &kp N7          &kp LBKT
&kp SCRLK       &kp F6          &kp F5           &kp F4            &kp F11            &kp EQUAL     &kp N6            &kp N5           &kp N4          &kp SQT
&kp PAUSE_BREAK &kp F3          &kp F2           &kp F1            &kp F10            &kp BSLH      &kp N3            &kp N2           &kp N1          &kp GRAVE
&kp DOT         &kp MINUS       &trans           &trans            &kp N0             &trans        &trans            &trans                           &trans
            >;
        };

        sym_osm_mir_layer {
            label = "OSM-SYM-MIR";
            bindings = <
&kp TILDE       &kp PIPE        &kp PLUS         &kp UNDER         &arrow_fn          &kp RBRC      &kp LPAR          &kp ASTRK        &kp AMPS        &kp LBRC
&sk LGUI        &sk LALT        &sk LCTRL        &sk LSHFT         &trans             &kp PLUS      &kp CARET         &kp PRCNT        &kp DLLR        &kp DQT
&kp QMARK       &kp COLON       &kp EQUAL        &kp MINUS         &console_log       &kp PIPE      &kp HASH          &kp AT           &kp EXCL        &kp TILDE
&trans          &trans          &trans           &trans            &kp UNDER          &kp LPAR      &trans            &trans                           &trans
            >;
        };

        fun_mir_layer {
            label = "FUN-MIR";
            bindings = <
&trans          &trans          &kp C_NEXT       &kp C_VOL_UP      &kp C_BRI_UP       &kp PSCRN     &kp F9            &kp F8           &kp F7          &kp F12
&trans          &kp C_PP        &kp C_PREV       &kp C_VOL_DN      &kp C_BRI_DN       &kp SCRLK     &kp F6            &kp F5           &kp F4          &kp F11
&trans          &trans          &trans           &kp C_MUTE        &trans             &kp PAUSE_BREAK &kp F3          &kp F2           &kp F1          &kp F10
&trans          &kp DEL         &trans           &trans            &kp TAB            &kp SPACE     &trans            &trans                           &trans
            >;
        };

        // OSM Windows Management mirror
        win_osm_mir_layer {
            label = "WIN-OSM-MIR";
            bindings = <
&win_lock       &kp LG(N9)      &kp LG(N8)       &kp LG(N7)        &alt_tab           &kp LC(LG(D)) &kp LC(LG(RIGHT)) &kp LG(UP)      &kp LC(LG(LEFT)) &kp LG(TAB)
&win_settings   &kp LG(N6)      &kp LG(N5)       &kp LG(N4)        &kp LG(Z)          &kp LG(D)     &kp LG(RIGHT)     &kp LG(UP)      &kp LG(DOWN)    &kp LG(LEFT)
&kp LG(SEMI)    &kp LG(N3)      &kp LG(N2)       &kp LG(N1)        &kp LG(M)          &kp LC(LG(F4)) &kp LG(V)        &kp LG(C)       &kp LG(X)       &win_run
&trans          &trans          &kp LG(N0)       &trans            &trans             &trans        &trans            &trans                           &trans
            >;
        };
    };
};